AWSTemplateFormatVersion: '2010-09-09'
Description: 'Stack for deploying a EC2 instances for poolgp docker swarm'
Parameters:
  KeyName:
    Description: Existing EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be an EC2 keypair.
  InstanceType:
    Description: EC2 compute instance type
    Type: String
    Default: c4.2xlarge
    AllowedValues: [c4.large, c4.xlarge, c4.2xlarge]
    ConstraintDescription: must be a valid c4 large EC2 instance type.
  InstanceAmiId:
    Type:  String
    Default: 'ami-0f65671a86f061fcd'
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  VpcCIDR:
    Description: CIDR range for vpc
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  PoolgpSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'
      - IpProtocol: tcp
        FromPort: 2377
        ToPort: 2377
        CidrIp: !Ref 'VpcCIDR'
      - IpProtocol: udp
        FromPort: 2377
        ToPort: 2377
        CidrIp: !Ref 'VpcCIDR'
      - IpProtocol: udp
        FromPort: 4789
        ToPort: 4789
        CidrIp: !Ref 'VpcCIDR'
      - IpProtocol: 50
        FromPort: 0
        ToPort: 65535
        CidrIp: !Ref 'VpcCIDR'
      - IpProtocol: tcp
        FromPort: 9999
        ToPort: 9999
        CidrIp: !Ref 'VpcCIDR'
      - IpProtocol: tcp
        FromPort: 9000
        ToPort: 9000
        CidrIp: !Ref 'VpcCIDR'
      - IpProtocol: tcp
        FromPort: 8888
        ToPort: 8888
        CidrIp: !Ref 'VpcCIDR'
      - IpProtocol: icmp
        FromPort: 8
        ToPort: -1
        CidrIp: !Ref 'SSHLocation'
  PoolGPCompute1:
    Type: AWS::EC2::Instance
    Properties:
      SecurityGroups: [!Ref 'PoolgpSecurityGroup']
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'InstanceAmiId'
  PoolGPCompute2:
    Type: AWS::EC2::Instance
    Properties:
      SecurityGroups: [!Ref 'PoolgpSecurityGroup']
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'InstanceAmiId'
  PoolGPCompute3:
    Type: AWS::EC2::Instance
    Properties:
      SecurityGroups: [!Ref 'PoolgpSecurityGroup']
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'InstanceAmiId'
  PoolGPCompute4:
    Type: AWS::EC2::Instance
    Properties:
      SecurityGroups: [!Ref 'PoolgpSecurityGroup']
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'InstanceAmiId'
Outputs:
  C1PublicIP:
    Description: Public IP address of compute node 1
    Value: !GetAtt [PoolGPCompute1, PublicIp]
  C2PublicIP:
    Description: Public IP address of compute node 2
    Value: !GetAtt [PoolGPCompute2, PublicIp]
  C3PublicIP:
    Description: Public IP address of compute node 3
    Value: !GetAtt [PoolGPCompute3, PublicIp]
  C4PublicIP:
    Description: Public IP address of compute node 4
    Value: !GetAtt [PoolGPCompute4, PublicIp]
