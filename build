#!/bin/bash

#reset getopts
OPTIND=1

lein_build () {
  lein deps
  lein uberjar || exit 1
}

start_docker() {
  open -a Docker || exit 1
  i=0
  while ! docker system info &>/dev/null; do
    (( i++ == 0 )) && printf "Waiting for Docker daemon" %s || printf "."
    sleep 1
  done
  (( i )) && printf '\n'
}

lein_install() {
  brew install leiningen || exit 1 #note: this is not the preferred way to install lein
  lein_build
}

#check lein installation
if command -v lein >/dev/null 2>&1; then
  lein_build
else
  if command -v brew >/dev/null 2>&1; then
    lein_install
  else
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    lein_install
  fi
fi

#optional build args
DOCKER=""
RELEASE=""

while getopts ":r:d:" opt; do
  case $opt in
    r)
      RELEASE="$OPTARG"
      ;;
    d)
      DOCKER="$OPTARG"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

[ "${1:-}" = "--" ] && shift

#optionally release package
if [ "$RELEASE" != "" ]; then
  #TODO
  echo "TODO"
fi

if [ "$DOCKER" != "" ]; then
  #note: this file is not committed to vc and contains an aws account id and ecr name
  source docker/aws_keyvals.txt

  start_docker
  docker build --build-arg TASK_DEFINITION=$DOCKER --tag poolgp_server:latest .
  docker tag poolgp_server:latest ${AWS_ACCOUNT}.${ECR_RESOURCE_URI}:latest
  docker push ${AWS_ACCOUNT}.${ECR_RESOURCE_URI}:latest || exit 1

  #show images currently in ecr
  aws ecr describe-images --repository-name poolgp --region us-east-2

  #to run image: docker run poolgp_server:latest
fi
